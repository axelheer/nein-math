name: everything
on: [ push, pull_request ]
jobs:
  test:
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]
        framework: [ 'netcoreapp3.1', 'net5.0' ]
        include:
        - os: windows-latest
          framework: net48
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup dotnet (3.1)
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1'
      if: matrix.framework == 'netcoreapp3.1'
    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
    - name: Run tests (${{ matrix.framework }})
      run: dotnet test --configuration Release --framework ${{ matrix.framework }} --results-directory test-results --settings test.runsettings
    - name: Publish coverage
      uses: codecov/codecov-action@v1
      with:
        file: test-results/*/coverage.opencover.xml
  package:
    needs: test
    runs-on: windows-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
    - name: Create packages (w/o version suffix)
      run: dotnet pack --configuration Release --output pkg
      if: startsWith(github.ref, 'refs/tags/v')
    - name: Create packages (w/ version suffix)
      run: dotnet pack --configuration Release --output pkg --version-suffix preview.${{ github.run_number }}
      if: startsWith(github.ref, 'refs/tags/v')
    - name: Upload packages
      uses: actions/upload-artifact@v1
      with:
        name: packages
        path: pkg
    if: github.event_name == 'push'
  prerelease:
    needs: package
    runs-on: windows-latest
    steps:
    - name: Download packages
      uses: actions/download-artifact@v1
      with:
        name: packages
        path: .
    - name: Publish packages
      run: dotnet nuget push *.nupkg --api-key ${{ secrets.GITHUB_TOKEN }} --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
    if: github.ref == 'refs/heads/main'
  release:
    needs: package
    runs-on: windows-latest
    steps:
    - name: Download packages
      uses: actions/download-artifact@v1
      with:
        name: packages
        path: .
    - name: Publish packages
      run: dotnet nuget push *.nupkg --api-key ${{ secrets.NUGET_TOKEN }} --skip-duplicate --source nuget.org
    if: startsWith(github.ref, 'refs/tags/v')
